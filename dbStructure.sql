-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  permissions jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT admin_users_pkey PRIMARY KEY (id),
  CONSTRAINT fk_admin_users_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.appointment_reasons (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name_en character varying NOT NULL DEFAULT 'General Consultation'::character varying,
  name_ar character varying NOT NULL DEFAULT 'استشارة عامة'::character varying,
  name_ku character varying NOT NULL DEFAULT 'راوێژکاری گشتی'::character varying,
  description_en text,
  description_ar text,
  description_ku text,
  icon_name character varying DEFAULT 'medical_services'::character varying,
  mapped_specialty character varying NOT NULL DEFAULT 'General'::character varying,
  visit_type character varying DEFAULT 'both'::character varying CHECK (visit_type::text = ANY (ARRAY['clinic'::character varying, 'home'::character varying, 'both'::character varying]::text[])),
  is_active boolean DEFAULT true,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  appointment_id uuid,
  CONSTRAINT appointment_reasons_pkey PRIMARY KEY (id),
  CONSTRAINT appointment_reasons_appointment_id_fkey FOREIGN KEY (appointment_id) REFERENCES public.appointments(id)
);
CREATE TABLE public.appointments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  doctor_id uuid,
  patient_id uuid,
  appointment_date date NOT NULL,
  appointment_time time without time zone NOT NULL,
  duration integer DEFAULT 30,
  status text DEFAULT 'scheduled'::text CHECK (status = ANY (ARRAY['scheduled'::text, 'confirmed'::text, 'cancelled'::text, 'completed'::text, 'no_show'::text])),
  type text DEFAULT 'consultation'::text CHECK (type = ANY (ARRAY['consultation'::text, 'follow_up'::text, 'emergency'::text, 'routine'::text])),
  notes text,
  symptoms text,
  diagnosis text,
  prescription text,
  follow_up_required boolean DEFAULT false,
  follow_up_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  booking_reference character varying,
  patient_info jsonb DEFAULT '{}'::jsonb,
  chief_complaint text,
  payment_method character varying DEFAULT 'cash'::character varying,
  payment_status character varying DEFAULT 'pending'::character varying,
  appointment_type text DEFAULT 'clinic'::text CHECK (appointment_type = ANY (ARRAY['clinic'::text, 'home'::text])),
  consultation_fee numeric,
  center_id uuid,
  cancellation_reason text,
  CONSTRAINT appointments_pkey PRIMARY KEY (id),
  CONSTRAINT appointments_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.users(id),
  CONSTRAINT fk_appointments_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id),
  CONSTRAINT fk_appointments_center FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT fk_appointments_patient FOREIGN KEY (patient_id) REFERENCES public.users(id),
  CONSTRAINT appointments_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.users(id)
);
CREATE TABLE public.audit_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  action text NOT NULL,
  resource_type text NOT NULL,
  resource_id text,
  old_values jsonb,
  new_values jsonb,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT fk_audit_logs_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.billing (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  appointment_id uuid,
  doctor_id uuid,
  patient_id uuid,
  amount numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  cost numeric,
  lab_booking_id uuid,
  CONSTRAINT billing_pkey PRIMARY KEY (id),
  CONSTRAINT fk_billing_appointment FOREIGN KEY (appointment_id) REFERENCES public.appointments(id),
  CONSTRAINT fk_billing_patient FOREIGN KEY (patient_id) REFERENCES public.users(id),
  CONSTRAINT fk_billing_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id),
  CONSTRAINT fk_billing_lab_booking FOREIGN KEY (lab_booking_id) REFERENCES public.lab_bookings(id)
);
CREATE TABLE public.center_lab_schedules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  center_id uuid NOT NULL,
  lab_test_type_id uuid NOT NULL,
  day_of_week integer NOT NULL CHECK (day_of_week >= 0 AND day_of_week <= 6),
  is_available boolean DEFAULT true,
  time_slots jsonb DEFAULT '[]'::jsonb,
  break_start character varying,
  break_end character varying,
  slot_duration integer DEFAULT 30,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT center_lab_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT center_lab_schedules_center_id_fkey FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT center_lab_schedules_lab_test_type_id_fkey FOREIGN KEY (lab_test_type_id) REFERENCES public.lab_test_types(id)
);
CREATE TABLE public.center_lab_services (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  center_id uuid NOT NULL,
  lab_test_type_id uuid NOT NULL,
  base_fee numeric,
  is_active boolean DEFAULT true,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT center_lab_services_pkey PRIMARY KEY (id),
  CONSTRAINT center_lab_services_center_id_fkey FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT center_lab_services_lab_test_type_id_fkey FOREIGN KEY (lab_test_type_id) REFERENCES public.lab_test_types(id)
);
CREATE TABLE public.centers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  address text,
  phone text,
  email text,
  operating_hours jsonb,
  services ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  center_type text DEFAULT 'generic'::text CHECK (center_type = ANY (ARRAY['generic'::text, 'personal'::text])),
  owner_doctor_id uuid,
  approval_status text DEFAULT 'approved'::text CHECK (approval_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  offers_labs boolean DEFAULT false,
  offers_imaging boolean DEFAULT false,
  CONSTRAINT centers_pkey PRIMARY KEY (id),
  CONSTRAINT centers_owner_doctor_id_fkey FOREIGN KEY (owner_doctor_id) REFERENCES public.users(id)
);
CREATE TABLE public.doctor_availability (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  doctor_id uuid NOT NULL,
  date date NOT NULL,
  is_available boolean DEFAULT true,
  slots jsonb NOT NULL DEFAULT '[]'::jsonb,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  home_available boolean DEFAULT false,
  center_id uuid,
  CONSTRAINT doctor_availability_pkey PRIMARY KEY (id),
  CONSTRAINT doctor_availability_center_id_fkey FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT fk_doctor_availability_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id)
);
CREATE TABLE public.doctor_centers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  doctor_id uuid,
  center_id uuid,
  is_primary boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT doctor_centers_pkey PRIMARY KEY (id),
  CONSTRAINT fk_doctor_centers_center FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT fk_doctor_centers_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id)
);
CREATE TABLE public.doctor_certificates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  doctor_id uuid NOT NULL,
  certificate_type character varying NOT NULL DEFAULT 'medical_license'::character varying,
  certificate_number character varying,
  certificate_file_url text NOT NULL,
  certificate_file_name character varying NOT NULL,
  issuing_authority character varying,
  issue_date date,
  expiry_date date,
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text, 'resubmission_required'::text])),
  submitted_at timestamp with time zone DEFAULT now(),
  reviewed_at timestamp with time zone,
  reviewed_by uuid,
  rejection_reason text,
  admin_notes text,
  resubmission_requirements text,
  resubmission_deadline date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT doctor_certificates_pkey PRIMARY KEY (id),
  CONSTRAINT fk_doctor_certificates_reviewer FOREIGN KEY (reviewed_by) REFERENCES public.users(id),
  CONSTRAINT fk_doctor_certificates_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id)
);
CREATE TABLE public.doctor_reviews (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  doctor_id uuid NOT NULL,
  patient_id uuid NOT NULL,
  appointment_id uuid,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  review_text text,
  bedside_manner_rating integer CHECK (bedside_manner_rating >= 1 AND bedside_manner_rating <= 5),
  waiting_time_rating integer CHECK (waiting_time_rating >= 1 AND waiting_time_rating <= 5),
  clinic_environment_rating integer CHECK (clinic_environment_rating >= 1 AND clinic_environment_rating <= 5),
  is_verified boolean DEFAULT false,
  is_anonymous boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT doctor_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT fk_doctor_reviews_appointment FOREIGN KEY (appointment_id) REFERENCES public.appointments(id),
  CONSTRAINT fk_doctor_reviews_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id),
  CONSTRAINT fk_doctor_reviews_patient FOREIGN KEY (patient_id) REFERENCES public.users(id)
);
CREATE TABLE public.doctor_schedules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  doctor_id uuid NOT NULL,
  day_of_week integer NOT NULL CHECK (day_of_week >= 0 AND day_of_week <= 6),
  is_available boolean DEFAULT true,
  time_slots jsonb DEFAULT '[]'::jsonb,
  break_start character varying,
  break_end character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  center_id uuid NOT NULL,
  consultation_fee numeric,
  slot_duration integer DEFAULT 30,
  CONSTRAINT doctor_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT fk_doctor_schedules_center FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT doctor_schedules_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.users(id)
);
CREATE TABLE public.lab_bookings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid NOT NULL,
  center_id uuid NOT NULL,
  lab_test_type_id uuid NOT NULL,
  booking_date date NOT NULL,
  booking_time time without time zone NOT NULL,
  duration integer DEFAULT 30,
  status text NOT NULL DEFAULT 'scheduled'::text CHECK (status = ANY (ARRAY['scheduled'::text, 'confirmed'::text, 'cancelled'::text, 'completed'::text, 'no_show'::text])),
  notes text,
  booking_reference character varying,
  payment_status character varying DEFAULT 'pending'::character varying,
  payment_method character varying DEFAULT 'cash'::character varying,
  fee numeric,
  result_file_url text,
  result_notes text,
  result_date date,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT lab_bookings_pkey PRIMARY KEY (id),
  CONSTRAINT lab_bookings_lab_test_type_id_fkey FOREIGN KEY (lab_test_type_id) REFERENCES public.lab_test_types(id),
  CONSTRAINT lab_bookings_center_id_fkey FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT lab_bookings_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.users(id)
);
CREATE TABLE public.lab_test_types (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code text UNIQUE,
  name text NOT NULL,
  category text NOT NULL CHECK (category = ANY (ARRAY['lab'::text, 'imaging'::text])),
  description text,
  name_en character varying,
  name_ar character varying,
  name_ku character varying,
  default_duration integer DEFAULT 30,
  default_fee numeric,
  is_active boolean DEFAULT true,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT lab_test_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.medical_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  patient_id uuid,
  doctor_id uuid,
  appointment_id uuid,
  record_type text DEFAULT 'consultation'::text CHECK (record_type = ANY (ARRAY['consultation'::text, 'lab_result'::text, 'prescription'::text, 'diagnosis'::text, 'treatment_plan'::text])),
  title text NOT NULL,
  description text,
  diagnosis text,
  treatment text,
  prescription text,
  lab_results jsonb,
  attachments ARRAY,
  record_date date DEFAULT CURRENT_DATE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_id uuid,
  allergies text,
  medications text,
  medical_history text,
  CONSTRAINT medical_records_pkey PRIMARY KEY (id),
  CONSTRAINT medical_records_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.users(id),
  CONSTRAINT fk_medical_records_appointment FOREIGN KEY (appointment_id) REFERENCES public.appointments(id),
  CONSTRAINT medical_records_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.users(id),
  CONSTRAINT fk_medical_records_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id),
  CONSTRAINT fk_medical_records_patient FOREIGN KEY (patient_id) REFERENCES public.users(id),
  CONSTRAINT medical_records_appointment_id_fkey FOREIGN KEY (appointment_id) REFERENCES public.appointments(id)
);
CREATE TABLE public.notification (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  message text,
  type text DEFAULT ''::text,
  is_read boolean DEFAULT false,
  sent_at timestamp without time zone DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT notification_pkey PRIMARY KEY (id),
  CONSTRAINT fk_notification_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.procedures (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  doctor_id uuid,
  center_id uuid,
  title text,
  description text,
  procedure_date date,
  outcome text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT procedures_pkey PRIMARY KEY (id),
  CONSTRAINT fk_procedures_center FOREIGN KEY (center_id) REFERENCES public.centers(id),
  CONSTRAINT fk_procedures_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id),
  CONSTRAINT fk_procedures_patient FOREIGN KEY (patient_id) REFERENCES public.users(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  doctor_id uuid,
  appointment_id uuid,
  rating numeric CHECK (rating >= 0::numeric AND rating <= 5::numeric),
  comment text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT fk_reviews_appointment FOREIGN KEY (appointment_id) REFERENCES public.appointments(id),
  CONSTRAINT fk_reviews_patient FOREIGN KEY (patient_id) REFERENCES public.users(id),
  CONSTRAINT fk_reviews_doctor FOREIGN KEY (doctor_id) REFERENCES public.users(id)
);
CREATE TABLE public.specialties (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  description text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  name_en character varying DEFAULT 'General'::character varying,
  name_ar character varying DEFAULT 'عام'::character varying,
  name_ku character varying DEFAULT 'گشتی'::character varying,
  icon_name character varying DEFAULT 'medical_services'::character varying,
  color_code character varying DEFAULT '#4CAF50'::character varying,
  is_active boolean DEFAULT true,
  display_order integer DEFAULT 0,
  order_index integer DEFAULT 0,
  CONSTRAINT specialties_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  uid text NOT NULL,
  phone text NOT NULL UNIQUE,
  first_name text,
  last_name text,
  name text NOT NULL,
  email text,
  gender text,
  medical_history text,
  allergies text,
  medications text,
  date_of_birth date,
  password_hash text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_first_login boolean NOT NULL DEFAULT true,
  role text DEFAULT 'patient'::text CHECK (role = ANY (ARRAY['patient'::text, 'doctor'::text, 'admin'::text, 'center'::text, 'super_admin'::text])),
  default_dashboard text,
  profile_picture text,
  specialty text,
  qualifications ARRAY,
  bio text,
  experience_years integer,
  consultation_fee numeric,
  work_hours jsonb,
  vacation_days jsonb,
  rating numeric DEFAULT 0.0,
  emergency_contact jsonb DEFAULT '{}'::jsonb,
  home_visits_available boolean DEFAULT false,
  center_id uuid,
  approval_status character varying DEFAULT 'pending'::character varying CHECK (approval_status::text = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text, 'suspended'::text])),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_center_id_fkey FOREIGN KEY (center_id) REFERENCES public.centers(id)
);